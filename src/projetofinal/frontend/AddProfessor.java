/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetofinal.frontend;

import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import projetofinal.backend.Disciplina;
import static projetofinal.backend.ManipulaArquivo.busca3D;
import static projetofinal.backend.ManipulaArquivo.busca4D;
import static projetofinal.backend.ManipulaArquivo.busca5D;
import static projetofinal.backend.ManipulaArquivo.gravarProfessor;
import static projetofinal.backend.ManipulaArquivo.leitorProfessor;
import projetofinal.backend.Professor;

/**
 *
 * @author João Pedro
 */
public class AddProfessor extends javax.swing.JFrame {

    /**
     * Creates new form addProfessor
     */
    static List<Disciplina> disciplina;
    static List<String> horarios=new ArrayList<>();
    static int qtdeHorarios=0;
  
    
    public AddProfessor(List<Disciplina> disciParam) {
        initComponents();
        
        
        
        this.setVisible(true);
        
        comboDisciplina4.setVisible(false);
        comboDisciplina5.setVisible(false);
        
        disciplina=disciParam;
       
        comboDisciplina1.removeAllItems();
        comboDisciplina2.removeAllItems();
        comboDisciplina3.removeAllItems();
        comboDisciplina4.removeAllItems();
        comboDisciplina5.removeAllItems();
        
        int n = disciplina.size();
        for (int i=0; i<n; i++) {
            String temp=disciplina.get(i).getCodigo()+";"+disciplina.get(i).getNome()+";"+disciplina.get(i).getDepartamento()+";"+disciplina.get(i).getCreditos();
            comboDisciplina1.addItem(temp);
            comboDisciplina2.addItem(temp);
            comboDisciplina3.addItem(temp);
            comboDisciplina4.addItem(temp);
            comboDisciplina5.addItem(temp);
         
            
        }
        
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        qtdePref = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        comboDisciplina1 = new javax.swing.JComboBox<>();
        comboDisciplina2 = new javax.swing.JComboBox<>();
        comboDisciplina3 = new javax.swing.JComboBox<>();
        comboDisciplina4 = new javax.swing.JComboBox<>();
        comboDisciplina5 = new javax.swing.JComboBox<>();
        botaoAddProfessor = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        checkH1 = new javax.swing.JCheckBox();
        checkH3 = new javax.swing.JCheckBox();
        checkH2 = new javax.swing.JCheckBox();
        checkH4 = new javax.swing.JCheckBox();
        checkH5 = new javax.swing.JCheckBox();
        checkH6 = new javax.swing.JCheckBox();
        checkH9 = new javax.swing.JCheckBox();
        checkH8 = new javax.swing.JCheckBox();
        checkH7 = new javax.swing.JCheckBox();
        checkH12 = new javax.swing.JCheckBox();
        checkH11 = new javax.swing.JCheckBox();
        checkH10 = new javax.swing.JCheckBox();
        checkH15 = new javax.swing.JCheckBox();
        checkH14 = new javax.swing.JCheckBox();
        checkH13 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        textMatricula = new javax.swing.JTextField();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Adicionar Professor");

        qtdePref.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "4", "5" }));
        qtdePref.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                qtdePrefItemStateChanged(evt);
            }
        });
        qtdePref.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtdePrefActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel2.setText("Quantidade de preferências");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel3.setText("Nome:");
        jLabel3.setToolTipText("");

        comboDisciplina1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COMP0397 - PROGRAMAÇÃO PARALELA E CONCORRENTE - 60h\t", "COMP0427 - INTELIGÊNCIA ARTIFICIAL - 60h", "COMP0439 - ENGENHARIA DE SOFTWARE II - 60h\t", "COMP0455 - BANCO DE DADOS I - 60h\t", "COMP0463 - LABORATÓRIO DE REDES DE COMPUTADORES - 30h\t", "COMP0470 - SISTEMAS DISTRIBUÍDOS - 60h" }));
        comboDisciplina1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDisciplina1ActionPerformed(evt);
            }
        });

        comboDisciplina2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboDisciplina3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboDisciplina4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboDisciplina5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        botaoAddProfessor.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        botaoAddProfessor.setText("Adicionar");
        botaoAddProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddProfessorActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel4.setText("Horários não disponíveis");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Segunda");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Terça");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Quarta");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Quinta");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Sexta");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("13:00-14:40");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("15:00-16:40");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("17:00-18:40");

        checkH1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkH1StateChanged(evt);
            }
        });
        checkH1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH1ActionPerformed(evt);
            }
        });

        checkH3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH3ActionPerformed(evt);
            }
        });

        checkH2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH2ActionPerformed(evt);
            }
        });

        checkH4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH4ActionPerformed(evt);
            }
        });

        checkH5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH5ActionPerformed(evt);
            }
        });

        checkH6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH6ActionPerformed(evt);
            }
        });

        checkH9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH9ActionPerformed(evt);
            }
        });

        checkH8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH8ActionPerformed(evt);
            }
        });

        checkH7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH7ActionPerformed(evt);
            }
        });

        checkH12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH12ActionPerformed(evt);
            }
        });

        checkH11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH11ActionPerformed(evt);
            }
        });

        checkH10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH10ActionPerformed(evt);
            }
        });

        checkH15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH15ActionPerformed(evt);
            }
        });

        checkH14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH14ActionPerformed(evt);
            }
        });

        checkH13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkH13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkH1)
                    .addComponent(checkH3)
                    .addComponent(checkH2))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(checkH4)
                                    .addComponent(checkH5)
                                    .addComponent(checkH6))
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(checkH9)
                                    .addComponent(checkH8)
                                    .addComponent(checkH7))))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkH11)
                                    .addComponent(checkH10)
                                    .addComponent(checkH12))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkH15)
                            .addComponent(jLabel9)
                            .addComponent(checkH14)
                            .addComponent(checkH13))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(111, 111, 111))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6))
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkH1)
                            .addComponent(jLabel10)
                            .addComponent(checkH4)
                            .addComponent(checkH7)
                            .addComponent(checkH10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(checkH5)
                                    .addComponent(checkH8)
                                    .addComponent(checkH11)
                                    .addComponent(checkH14))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(checkH3)
                                    .addComponent(checkH6)
                                    .addComponent(checkH9)
                                    .addComponent(checkH12)
                                    .addComponent(checkH15)))
                            .addComponent(checkH2)))
                    .addComponent(checkH13))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel13.setText("Matricula:");
        jLabel13.setToolTipText("");

        btnVoltar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addComponent(qtdePref, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(422, 422, 422)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboDisciplina1, 0, 472, Short.MAX_VALUE)
                                    .addComponent(comboDisciplina2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboDisciplina3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboDisciplina4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboDisciplina5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(337, 337, 337)
                                .addComponent(botaoAddProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(42, 43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(qtdePref, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboDisciplina1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboDisciplina2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboDisciplina3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboDisciplina4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboDisciplina5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAddProfessor)
                    .addComponent(btnVoltar))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboDisciplina1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDisciplina1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDisciplina1ActionPerformed

    private void qtdePrefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtdePrefActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtdePrefActionPerformed

    private void qtdePrefItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_qtdePrefItemStateChanged
        // TODO add your handling code here:
        if(this.qtdePref.getSelectedIndex()==0){
            comboDisciplina4.setVisible(false);
            comboDisciplina5.setVisible(false);
        }else if(this.qtdePref.getSelectedIndex()==1){
            comboDisciplina4.setVisible(true);
            comboDisciplina5.setVisible(false);
        }else{
            comboDisciplina4.setVisible(true);
            comboDisciplina5.setVisible(true);
        }

    }//GEN-LAST:event_qtdePrefItemStateChanged

    private void checkH1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH1ActionPerformed
        // TODO add your handling code here:
        
        if(checkH1.isSelected()){
            horarios.add("h1");
            qtdeHorarios++;
        }else{
            qtdeHorarios--;
            horarios.remove("h1");
        }
        
       
    }//GEN-LAST:event_checkH1ActionPerformed

    private void checkH3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH3ActionPerformed
        // TODO add your handling code here:
         
        if(checkH3.isSelected()){
            horarios.add("h3");
            qtdeHorarios++;
        }else{
            qtdeHorarios--;
            horarios.remove("h3");
        }
        
    }//GEN-LAST:event_checkH3ActionPerformed

    private void checkH2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH2ActionPerformed
        // TODO add your handling code here:
        if(checkH2.isSelected()){
            horarios.add("h2");
            qtdeHorarios++;
        }else{
            qtdeHorarios--;
            horarios.remove("h2");
        }
    }//GEN-LAST:event_checkH2ActionPerformed

    private void checkH4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH4ActionPerformed
        // TODO add your handling code here:
        if(checkH4.isSelected()){
            horarios.add("h4");
            qtdeHorarios++;
        }else{
            qtdeHorarios--;
            horarios.remove("h4");
        }
    }//GEN-LAST:event_checkH4ActionPerformed

    private void checkH5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH5ActionPerformed
        // TODO add your handling code here:
        if(checkH5.isSelected()){
            horarios.add("h5");
            qtdeHorarios++;
        }else{
            qtdeHorarios--;
            horarios.remove("h5");
        }
    }//GEN-LAST:event_checkH5ActionPerformed

    private void checkH6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH6ActionPerformed
        // TODO add your handling code here:
        if(checkH6.isSelected()){
            horarios.add("h6");
            qtdeHorarios++;
        }else{
            qtdeHorarios--;
            horarios.remove("h6");
        }
    }//GEN-LAST:event_checkH6ActionPerformed

    private void checkH9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH9ActionPerformed
        // TODO add your handling code here:
        if(checkH9.isSelected()){
            horarios.add("h9");
            qtdeHorarios++;
        }else{
            horarios.remove("h9");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH9ActionPerformed

    private void checkH8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH8ActionPerformed
        // TODO add your handling code here:
        if(checkH8.isSelected()){
            horarios.add("h8");
            qtdeHorarios++;
        }else{
            horarios.remove("h8");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH8ActionPerformed

    private void checkH7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH7ActionPerformed
        // TODO add your handling code here:
        if(checkH7.isSelected()){
            horarios.add("h7");
            qtdeHorarios++;
        }else{
            horarios.remove("h7");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH7ActionPerformed

    private void checkH12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH12ActionPerformed
        // TODO add your handling code here:
        if(checkH12.isSelected()){
            horarios.add("h12");
            qtdeHorarios++;
        }else{
            horarios.remove("h12");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH12ActionPerformed

    private void checkH11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH11ActionPerformed
        // TODO add your handling code here:
        if(checkH11.isSelected()){
            horarios.add("h11");
            qtdeHorarios++;
        }else{
            horarios.remove("h11");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH11ActionPerformed

    private void checkH10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH10ActionPerformed
        // TODO add your handling code here:
        if(checkH10.isSelected()){
            horarios.add("h10");
            qtdeHorarios++;
        }else{
            horarios.remove("h10");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH10ActionPerformed

    private void checkH15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH15ActionPerformed
        // TODO add your handling code here:
        if(checkH15.isSelected()){
            horarios.add("h15");
            qtdeHorarios++;
        }else{
            horarios.remove("h15");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH15ActionPerformed

    private void checkH14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH14ActionPerformed
        // TODO add your handling code here:
        if(checkH14.isSelected()){
            horarios.add("h14");
            qtdeHorarios++;
        }else{
            horarios.remove("h14");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH14ActionPerformed

    private void checkH13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkH13ActionPerformed
        // TODO add your handling code here:
        if(checkH13.isSelected()){
            horarios.add("h13");
            qtdeHorarios++;
        }else{
            horarios.remove("h13");
            qtdeHorarios--;
        }
    }//GEN-LAST:event_checkH13ActionPerformed

    private void botaoAddProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddProfessorActionPerformed
        // TODO add your handling code here:
        int qtdePrefs=qtdePref.getSelectedIndex();
        int cb1=comboDisciplina1.getSelectedIndex();
        int cb2=comboDisciplina2.getSelectedIndex();
        int cb3=comboDisciplina3.getSelectedIndex();
        int cb4=comboDisciplina4.getSelectedIndex();
        int cb5=comboDisciplina5.getSelectedIndex();
        
        List<Professor> listaVerificacao= new ArrayList<>();
        System.out.println(horarios);
        
        if(textNome.getText().equals("")){
            JOptionPane.showMessageDialog( null , " Professor nao pode ter nome vazio" , " Erro!" , JOptionPane.WARNING_MESSAGE );
        }
        
        if(textMatricula.getText().equals("")){
            JOptionPane.showMessageDialog( null , " Professor nao pode ter matricula vazia" , " Erro!" , JOptionPane.WARNING_MESSAGE );
        }
        Professor prof = new Professor("");
        prof.setNome(textNome.getText());
        
        System.out.println(textNome.getText());
        
        if(qtdePrefs==0){
            if(cb1!=cb2 && cb1!=cb3 && cb2!=cb3){
                //Verificacao de disciplinas correta
                if(qtdeHorarios>6){
                    JOptionPane.showMessageDialog( null , " Professor nao pode deixar de lecionar 6 aulas" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                }else{
                    try {
                        listaVerificacao=leitorProfessor("src/projetofinal/ProfessorObj.txt");
                        int mat=Integer.parseInt(textMatricula.getText());
                        int n=listaVerificacao.size();
                        boolean exists=false;
                        for (int i = 0; i < n; i++) {
                            
                            if(mat==listaVerificacao.get(i).getMatricula()){
                                JOptionPane.showMessageDialog( null , " Professor nao pode ter matriculas iguais" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                                exists=true;
                                break;
                            }
                        }
                        
                        if(exists==false){
                            
                            prof.setMatricula(mat);
                            prof.setRestricaoHorario((ArrayList<String>) horarios);
                            
                            //montando objetos das combobox
                            List<Disciplina> prefs= new ArrayList<>();
                            String discTemp = null;
                            String disc1 = null;
                            String disc2 = null;
                            String disc3 = null;
                            
                            String[] cod;
                            
                            discTemp=comboDisciplina1.getItemAt(comboDisciplina1.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc1=cod[0];
                            System.out.println(disc1);
                            
                            discTemp=comboDisciplina2.getItemAt(comboDisciplina2.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc2=cod[0];
                            System.out.println(disc2);
                            
                            discTemp=comboDisciplina3.getItemAt(comboDisciplina3.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc3=cod[0];
                            System.out.println(disc3);
                            
                            prefs=busca3D(disc1,disc2,disc3,"src/projetofinal/disciplinas.txt");
                                                       
                            prof.setPreferencias(prefs);
                            prof.printAll();
                            
                            gravarProfessor(prof,"src/projetofinal/ProfessorObj.txt");
                            JOptionPane.showMessageDialog( null , " Professor adicionado com sucesso!" , " Adicionado!" , JOptionPane.INFORMATION_MESSAGE );
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(AddProfessor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }else{
                JOptionPane.showMessageDialog( null , " Professor nao pode ter preferencias iguais" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                }
        }else if(qtdePrefs==1) {
                if(cb1!=cb2 && cb1!=cb3 && cb1!=cb4 && cb2!=cb3 && cb2!=cb4 && cb3!=cb4){
                    //Verificacao de disciplinas correta
                    if(qtdeHorarios>6){
                    JOptionPane.showMessageDialog( null , " Professor nao pode deixar de lecionar 6 aulas" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                    }else{
                        //gravar professor e sair da tela
                        try {
                        listaVerificacao=leitorProfessor("src/projetofinal/ProfessorObj.txt");
                        int mat=Integer.parseInt(textMatricula.getText());
                        int n=listaVerificacao.size();
                        boolean exists=false;
                        for (int i = 0; i < n; i++) {
                            
                            if(mat==listaVerificacao.get(i).getMatricula()){
                                JOptionPane.showMessageDialog( null , " Professor nao pode ter matriculas iguais" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                                exists=true;
                                break;
                            }
                        }
                        
                        if(exists==false){
                            
                            prof.setMatricula(mat);
                            prof.setRestricaoHorario((ArrayList<String>) horarios);
                            
                            //montando objetos das combobox
                            List<Disciplina> prefs= new ArrayList<>();
                            String discTemp = null;
                            String disc1 = null;
                            String disc2 = null;
                            String disc3 = null;
                            String disc4 = null;
                            
                            
                            String[] cod;
                            
                            discTemp=comboDisciplina1.getItemAt(comboDisciplina1.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc1=cod[0];
                            System.out.println(disc1);
                            
                            discTemp=comboDisciplina2.getItemAt(comboDisciplina2.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc2=cod[0];
                            System.out.println(disc2);
                            
                            discTemp=comboDisciplina3.getItemAt(comboDisciplina3.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc3=cod[0];
                            System.out.println(disc3);
                            
                            discTemp=comboDisciplina4.getItemAt(comboDisciplina4.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc4=cod[0];
                            System.out.println(disc4);
                            
                            prefs=busca4D(disc1,disc2,disc3,disc4,"src/projetofinal/disciplinas.txt");
                                                       
                            prof.setPreferencias(prefs);
                            prof.printAll();
                            
                            gravarProfessor(prof,"src/projetofinal/ProfessorObj.txt");
                            JOptionPane.showMessageDialog( null , " Professor adicionado com sucesso!" , " Adicionado!" , JOptionPane.INFORMATION_MESSAGE );
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(AddProfessor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    }
                }else{
                    JOptionPane.showMessageDialog( null , " Professor nao pode ter preferencias iguais" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                    }
            }else {
                if(cb1!=cb2 && cb1!=cb3 && cb1!=cb4 && cb1!=cb5 && cb2!=cb3 && cb2!=cb4 && cb2!=cb5 && cb3!=cb4 && cb3!=cb5 && cb4!=cb5){
                        //Verificacao de disciplinas correta
                    if(qtdeHorarios>6){
                        JOptionPane.showMessageDialog( null , " Professor nao pode deixar de lecionar 6 aulas" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                    }else{
                        //gravar professor e sair da tela
                        try {
                        listaVerificacao=leitorProfessor("src/projetofinal/ProfessorObj.txt");
                        int mat=Integer.parseInt(textMatricula.getText());
                        int n=listaVerificacao.size();
                        boolean exists=false;
                        for (int i = 0; i < n; i++) {
                            
                            if(mat==listaVerificacao.get(i).getMatricula()){
                                JOptionPane.showMessageDialog( null , " Professor nao pode ter matriculas iguais" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                                exists=true;
                                break;
                            }
                        }
                        
                        if(exists==false){
                            
                            prof.setMatricula(mat);
                            prof.setRestricaoHorario((ArrayList<String>) horarios);
                            
                            //montando objetos das combobox
                            List<Disciplina> prefs= new ArrayList<>();
                            String discTemp = null;
                            String disc1 = null;
                            String disc2 = null;
                            String disc3 = null;
                            String disc4 = null;
                            String disc5 = null;
                            
                            
                            String[] cod;
                            
                            discTemp=comboDisciplina1.getItemAt(comboDisciplina1.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc1=cod[0];
                            System.out.println(disc1);
                            
                            discTemp=comboDisciplina2.getItemAt(comboDisciplina2.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc2=cod[0];
                            System.out.println(disc2);
                            
                            discTemp=comboDisciplina3.getItemAt(comboDisciplina3.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc3=cod[0];
                            System.out.println(disc3);
                            
                            discTemp=comboDisciplina4.getItemAt(comboDisciplina4.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc4=cod[0];
                            System.out.println(disc4);
                            
                            discTemp=comboDisciplina5.getItemAt(comboDisciplina5.getSelectedIndex());
                            System.out.println(discTemp);
                            cod=discTemp.split(";");
                            disc5=cod[0];
                            System.out.println(disc5);
                            
                            prefs=busca5D(disc1,disc2,disc3,disc4,disc5,"src/projetofinal/disciplinas.txt");
                                                       
                            prof.setPreferencias(prefs);
                            prof.printAll();
                            
                            gravarProfessor(prof,"src/projetofinal/ProfessorObj.txt");
                            JOptionPane.showMessageDialog( null , " Professor adicionado com sucesso!" , " Adicionado!" , JOptionPane.INFORMATION_MESSAGE );
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(AddProfessor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                        }
                    
                    }else{
                    JOptionPane.showMessageDialog( null , " Professor nao pode ter preferencias iguais" , " Erro!" , JOptionPane.WARNING_MESSAGE );
                        }

                }
              
    }//GEN-LAST:event_botaoAddProfessorActionPerformed

    private void checkH1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkH1StateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_checkH1StateChanged

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        try {
            new Gui().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(AddProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddProfessor(disciplina).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAddProfessor;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JCheckBox checkH1;
    private javax.swing.JCheckBox checkH10;
    private javax.swing.JCheckBox checkH11;
    private javax.swing.JCheckBox checkH12;
    private javax.swing.JCheckBox checkH13;
    private javax.swing.JCheckBox checkH14;
    private javax.swing.JCheckBox checkH15;
    private javax.swing.JCheckBox checkH2;
    private javax.swing.JCheckBox checkH3;
    private javax.swing.JCheckBox checkH4;
    private javax.swing.JCheckBox checkH5;
    private javax.swing.JCheckBox checkH6;
    private javax.swing.JCheckBox checkH7;
    private javax.swing.JCheckBox checkH8;
    private javax.swing.JCheckBox checkH9;
    private javax.swing.JComboBox<String> comboDisciplina1;
    private javax.swing.JComboBox<String> comboDisciplina2;
    private javax.swing.JComboBox<String> comboDisciplina3;
    private javax.swing.JComboBox<String> comboDisciplina4;
    private javax.swing.JComboBox<String> comboDisciplina5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JComboBox<String> qtdePref;
    private javax.swing.JTextField textMatricula;
    private javax.swing.JTextField textNome;
    // End of variables declaration//GEN-END:variables
}
